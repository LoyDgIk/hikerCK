{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"developer","path":"developer","rule":"js:\nlet developer = storage0.getMyVar(\"developer\", []);\nif (developer.length === 0) {\n    let registry = post(\"https://a6.qikekeji.com/txt/data/detail/\", {\n        body: \"password=&txt_name=githubckregister\"\n    });\n    registry = JSON.parse(JSON.parse(registry).data.txt_content)[0].content || \"\";\n    developer = [];\n    registry = registry.trim().split(\"\\n\");\n    for (let it of registry) {\n        it = it.split(\"@\");\n        developer.push({\n            name: it[0],\n            repo: it[1]\n        });\n    }\n    storage0.putMyVar(\"developer\", developer);\n}\n$.exports = developer;"},{"col_type":"movie_3","name":"规则列表","path":"ruleList","rule":"js:\nlet list = fetch(\"https://api.github.com/repos/\" + MY_PARAMS.repo + \"/contents\");\nlist = JSON.parse(list);\nlist = list.filter(v => (v.name.endsWith(\".hiker\") || v.name.endsWith(\".json\")) && v.type === \"file\");\nlet d = [];\nfor (let it of list) {\n    d.push({\n        title: it.name,\n        col_type: \"text_2\",\n        url: \"rule://\" + base64Encode(\"￥home_rule_url￥\" + it.download_url)\n    });\n}\nsetResult(d);"}],"title":"github仓库","author":"@LoyDgIk","version":1,"type":"other","url":"hiker://empty##","col_type":"text_2","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nlet developer = $.require(\"developer\");\nd.push({\n    title:\"注册地址\",\n    url:\"https://txtpad.cn/githubckregister\",\n    col_type:\"text_center_1\"\n});\nfor (let it of developer) {\n    d.push({\n        title: it.name,\n        url: \"hiker://page/ruleList\",\n        col_type: \"text_2\",\n        extra: {\n            repo: it.repo,\n        }\n    });\n}\n\nsetResult(d);","searchFind":"","search_url":"","group":"开发中心","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"developer\",\"path\":\"developer\",\"rule\":\"js:\\nlet developer = storage0.getMyVar(\\\"developer\\\", []);\\nif (developer.length === 0) {\\n    let registry = post(\\\"https://a6.qikekeji.com/txt/data/detail/\\\", {\\n        body: \\\"password=&txt_name=githubckregister\\\"\\n    });\\n    registry = JSON.parse(JSON.parse(registry).data.txt_content)[0].content || \\\"\\\";\\n    developer = [];\\n    registry = registry.trim().split(\\\"\\\\n\\\");\\n    for (let it of registry) {\\n        it = it.split(\\\"@\\\");\\n        developer.push({\\n            name: it[0],\\n            repo: it[1]\\n        });\\n    }\\n    storage0.putMyVar(\\\"developer\\\", developer);\\n}\\n$.exports = developer;\"},{\"col_type\":\"movie_3\",\"name\":\"规则列表\",\"path\":\"ruleList\",\"rule\":\"js:\\nlet list = fetch(\\\"https://api.github.com/repos/\\\" + MY_PARAMS.repo + \\\"/contents\\\");\\nlist = JSON.parse(list);\\nlist = list.filter(v => (v.name.endsWith(\\\".hiker\\\") || v.name.endsWith(\\\".json\\\")) && v.type === \\\"file\\\");\\nlet d = [];\\nfor (let it of list) {\\n    d.push({\\n        title: it.name,\\n        col_type: \\\"text_2\\\",\\n        url: \\\"rule://\\\" + base64Encode(\\\"￥home_rule_url￥\\\" + it.download_url)\\n    });\\n}\\nsetResult(d);\"}]","proxy":"","icon":"https://gh-proxy.com/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/messy/13.svg"}