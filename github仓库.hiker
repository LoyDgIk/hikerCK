{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"developer","path":"developer","rule":"js:evalPrivateJS(\"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\");"},{"col_type":"movie_3","name":"规则列表","path":"ruleList","rule":"js:\nlet list = fetch(\"https://api.github.com/repos/\" + MY_PARAMS.repo + \"/contents\");\nlist = JSON.parse(list);\nlist = list.filter(v => (v.name.endsWith(\".hiker\") || v.name.endsWith(\".json\")) && v.type === \"file\");\nlet d = [];\nfor (let it of list) {\n    d.push({\n        title: it.name,\n        col_type: \"text_2\",\n        url: \"rule://\" + base64Encode(\"￥home_rule_url￥\" + it.download_url)\n    });\n}\nsetResult(d);"},{"col_type":"movie_3","name":"注册","path":"register","rule":"js:\nvar d = [];\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"ps_name\");\n    clearMyVar(\"ps_repo\");\n    clearMyVar(\"ps_token\");\n}));\n\nsetPageTitle(\"注册/登陆\");\nd.push({\n    col_type: \"input\",\n    desc: \"用户名\",\n    extra: {\n        onChange: $.toString(() => {\n            putMyVar(\"ps_name\", input);\n        }),\n        titleVisible: false\n    }\n});\nd.push({\n    col_type: \"input\",\n    desc: \"github用户名/仓库名\",\n    extra: {\n        onChange: $.toString(() => {\n            putMyVar(\"ps_repo\", input);\n        }),\n        titleVisible: false,\n    }\n});\nd.push({\n    col_type: \"input\",\n    desc: \"token\",\n    extra: {\n        type: \"password\",\n        onChange: $.toString(() => {\n            putMyVar(\"ps_token\", input);\n        }),\n        titleVisible: false,\n    }\n});\nd.push({\n    title: \"注册/登陆\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        let name = getMyVar(\"ps_name\", \"\");\n        if (name == \"\") {\n            return \"toast://用户名不能为空\"\n        }\n        let repo = getMyVar(\"ps_repo\", \"\");\n        if (repo == \"\") {\n            return \"toast://repo不能为空\"\n        }\n        let token = getMyVar(\"ps_token\", \"\");\n        if (token == \"\") {\n            return \"toast://token不能为空\"\n        }\n        let user = {\n            name: name,\n            repo: repo,\n            token: token\n        };\n\n        let registry = $.require(\"developer\").getRegistry();\n        let developer = registry.content;\n        if (developer.some(v => v.name === name && v.repo === repo)) {\n            storage0.setItem(\"user\", user);\n            back();\n            return \"toast://登陆成功\";\n        } else if (developer.some(v => v.name === name || v.repo === repo)) {\n            return \"toast://仓库已经存在或用户名已经存在\";\n        } else {\n            developer.push({\n                name: name,\n                repo: repo,\n            });\n            try {\n                let login = JSON.parse(fetch(\"https://api.github.com/repos/\" + repo, {\n                    headers: {\n                        Accept: \"application/vnd.github.v3+json\",\n                        Authorization: \"token \" + token\n                    }\n                }));\n                if(login.private){\n                    return \"toast://注册失败：私密仓库\";\n                }\n            } catch (e) {\n                return \"toast://仓库验证失败\";\n            }\n            if ($.require(\"developer\").setRegistry(registry)) {\n                storage0.setItem(\"user\", user);\n                clearMyVar(\"developer\");\n                back();\n                return \"toast://注册成功\";\n            }\n            return \"toast://注册失败\";\n        }\n\n    }),\n    col_type: \"text_center_1\",\n});\nsetResult(d);"}],"title":"github仓库","author":"@LoyDgIk","version":1,"type":"other","url":"hiker://empty##","col_type":"text_2","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\naddListener(\"onRefresh\",()=>clearMyVar(\"developer\"));\nlet developer = $.require(\"developer\").getDeveloper();\nlet user = storage0.getItem(\"user\", \"\");\nif (user) {\n    d.push({\n        title: user.name,\n        col_type: \"avatar\",\n        pic_url: \"hiker://images/icon_setting6\",\n        url: $([\"退出登陆\"]).select(() => {\n            clearItem(\"user\");\n            refreshPage();\n        })\n    });\n} else {\n    d.push({\n        title: \"注册/登陆\",\n        url: \"hiker://page/register\",\n        col_type: \"text_center_1\"\n    });\n}\nfor (let it of developer) {\n    d.push({\n        title: it.name,\n        url: \"hiker://page/ruleList\",\n        col_type: \"text_2\",\n        extra: {\n            repo: it.repo,\n        }\n    });\n}\n\nsetResult(d);","searchFind":"","search_url":"","group":"开发中心","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"developer\",\"path\":\"developer\",\"rule\":\"js:evalPrivateJS(\\\"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\\\");\"},{\"col_type\":\"movie_3\",\"name\":\"规则列表\",\"path\":\"ruleList\",\"rule\":\"js:\\nlet list = fetch(\\\"https://api.github.com/repos/\\\" + MY_PARAMS.repo + \\\"/contents\\\");\\nlist = JSON.parse(list);\\nlist = list.filter(v => (v.name.endsWith(\\\".hiker\\\") || v.name.endsWith(\\\".json\\\")) && v.type === \\\"file\\\");\\nlet d = [];\\nfor (let it of list) {\\n    d.push({\\n        title: it.name,\\n        col_type: \\\"text_2\\\",\\n        url: \\\"rule://\\\" + base64Encode(\\\"￥home_rule_url￥\\\" + it.download_url)\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"注册\",\"path\":\"register\",\"rule\":\"js:\\nvar d = [];\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\"ps_name\\\");\\n    clearMyVar(\\\"ps_repo\\\");\\n    clearMyVar(\\\"ps_token\\\");\\n}));\\n\\nsetPageTitle(\\\"注册/登陆\\\");\\nd.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"用户名\\\",\\n    extra: {\\n        onChange: $.toString(() => {\\n            putMyVar(\\\"ps_name\\\", input);\\n        }),\\n        titleVisible: false\\n    }\\n});\\nd.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"github用户名/仓库名\\\",\\n    extra: {\\n        onChange: $.toString(() => {\\n            putMyVar(\\\"ps_repo\\\", input);\\n        }),\\n        titleVisible: false,\\n    }\\n});\\nd.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"token\\\",\\n    extra: {\\n        type: \\\"password\\\",\\n        onChange: $.toString(() => {\\n            putMyVar(\\\"ps_token\\\", input);\\n        }),\\n        titleVisible: false,\\n    }\\n});\\nd.push({\\n    title: \\\"注册/登陆\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        let name = getMyVar(\\\"ps_name\\\", \\\"\\\");\\n        if (name == \\\"\\\") {\\n            return \\\"toast://用户名不能为空\\\"\\n        }\\n        let repo = getMyVar(\\\"ps_repo\\\", \\\"\\\");\\n        if (repo == \\\"\\\") {\\n            return \\\"toast://repo不能为空\\\"\\n        }\\n        let token = getMyVar(\\\"ps_token\\\", \\\"\\\");\\n        if (token == \\\"\\\") {\\n            return \\\"toast://token不能为空\\\"\\n        }\\n        let user = {\\n            name: name,\\n            repo: repo,\\n            token: token\\n        };\\n\\n        let registry = $.require(\\\"developer\\\").getRegistry();\\n        let developer = registry.content;\\n        if (developer.some(v => v.name === name && v.repo === repo)) {\\n            storage0.setItem(\\\"user\\\", user);\\n            back();\\n            return \\\"toast://登陆成功\\\";\\n        } else if (developer.some(v => v.name === name || v.repo === repo)) {\\n            return \\\"toast://仓库已经存在或用户名已经存在\\\";\\n        } else {\\n            developer.push({\\n                name: name,\\n                repo: repo,\\n            });\\n            try {\\n                let login = JSON.parse(fetch(\\\"https://api.github.com/repos/\\\" + repo, {\\n                    headers: {\\n                        Accept: \\\"application/vnd.github.v3+json\\\",\\n                        Authorization: \\\"token \\\" + token\\n                    }\\n                }));\\n                if(login.private){\\n                    return \\\"toast://注册失败：私密仓库\\\";\\n                }\\n            } catch (e) {\\n                return \\\"toast://仓库验证失败\\\";\\n            }\\n            if ($.require(\\\"developer\\\").setRegistry(registry)) {\\n                storage0.setItem(\\\"user\\\", user);\\n                clearMyVar(\\\"developer\\\");\\n                back();\\n                return \\\"toast://注册成功\\\";\\n            }\\n            return \\\"toast://注册失败\\\";\\n        }\\n\\n    }),\\n    col_type: \\\"text_center_1\\\",\\n});\\nsetResult(d);\"}]","proxy":"","icon":"https://gh-proxy.com/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/messy/13.svg"}